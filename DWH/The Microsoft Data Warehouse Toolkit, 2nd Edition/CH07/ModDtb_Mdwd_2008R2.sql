/****** Object:  Database MDWT_2008R2    Script Date: 2/2/2010 ******/
/*
Kimball Group, The Microsoft Data Warehouse Toolkit
Changes from the database that's autogenerated from the Excel spreadsheet.

These next statements are not generated from the Excel Workbook
*/
USE MDWT_2008R2
;

-- Add a dummy row to the audit table. This row will act as the parent row for the 
-- execution of a master package.
ALTER TABLE [DimAudit]  DROP  CONSTRAINT [FK_dbo_DimAudit_ParentAuditKey] 
GO

SET IDENTITY_INSERT DimAudit ON
go

INSERT INTO [MDWT_2008R2].[dbo].[DimAudit]
           (AuditKey
           ,ParentAuditKey
           ,[TableName]
           ,[PkgName]
           ,[PkgGUID]
           ,[PkgVersionGUID]
           ,[PkgVersionMajor]
           ,[PkgVersionMinor]
           ,[ExecStartDT]
           ,[ExecStopDT]
           ,[ExtractRowCnt]
           ,[InsertRowCnt]
           ,[UpdateRowCnt]
           ,[ErrorRowCnt]
           ,[TableInitialRowCnt]
           ,[TableFinalRowCnt]
           ,[TableMaxSurrogateKey]
           ,[SuccessfulProcessingInd])
     VALUES
           (0
           ,0
           ,'None'
           ,'Master Pkg, no parent'
           ,NULL
           ,NULL
           ,0
           ,0
           ,GETDATE()
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,NULL
           ,'N')
           
         
GO

SET IDENTITY_INSERT DimAudit OFF
go

ALTER TABLE [dbo].[DimAudit]  WITH CHECK ADD  CONSTRAINT [FK_dbo_DimAudit_ParentAuditKey] FOREIGN KEY([ParentAuditKey])
REFERENCES [dbo].[DimAudit] ([AuditKey])
GO

/*
Add 2 dummy rows to the OrderInfo table.
*/
SET IDENTITY_INSERT DimOrderInfo ON
go

/*
First dummy row is for channel sales to our stores
*/
INSERT INTO [DimOrderInfo]
           (OrderInfoKey
           ,[BKSalesReasonID]
           ,[Channel]
           ,[SalesReason]
           ,[SalesReasonType]
           ,[InsertAuditKey]
           ,[UpdateAuditKey])
     VALUES
           (-2
           ,-2
           ,'Store'
           ,'Store'
           ,'Store'
           ,0
           ,0)
GO
/*
Second dummy row is to handle multiple sales reasons on internet sales.
*/

INSERT INTO [DimOrderInfo]
           (OrderInfoKey
           ,[BKSalesReasonID]
           ,[Channel]
           ,[SalesReason]
           ,[SalesReasonType]
           ,[InsertAuditKey]
           ,[UpdateAuditKey])
     VALUES
           (-3
           ,-3
           ,'Internet'
           ,'Multiple reasons'
           ,'Multiple'
           ,0
           ,0)
GO
SET IDENTITY_INSERT DimOrderInfo OFF
go

/*
Add a "dummy" row to the salesperson table. This row will act as the row for sales orders that did not use
a specific salesperson.
*/
SET IDENTITY_INSERT [DimEmployee] ON
go

INSERT INTO [DimEmployee]
           (EmployeeKey
           ,[BKEmployeeID]
           ,[NationalIDNumber]
           ,[EmployeeIDName]
           ,[EmployeeFullName]
           ,[EmployeeFirstName]
           ,[EmployeeLastName]
           ,[EmployeeMiddleName]
           ,[BirthDate]
           ,[MaritalStatus]
           ,[Gender]
           ,[IsSalaried]
           ,[IsCurrentEmployee]
           ,[IsSalesPerson]
           ,[JobTitle]
           ,[DepartmentID]
           ,[Department]
           ,[DepartmentGroup]
           ,[BKCurrentSalesTerritoryId]
           ,[CurrentSalesTerritory]
           ,[CurrentSalesTerritoryCountry]
           ,[CurrentSalesTerritoryGroup]
           ,[BKHistoricalSalesTerritoryId]
           ,[HistoricalSalesTerritory]
           ,[HistoricalSalesTerritoryCountry]
           ,[HistoricalSalesTerritoryGroup]
           ,[HireDate]
           ,[LoginID]
           ,[EmployeeEmail]
           ,[EmployeePhone]
           ,[RowIsCurrent]
           ,[RowStartDate]
           ,[RowEndDate]
           ,[RowChangeReason]
           ,[InsertAuditKey]
           ,[UpdateAuditKey])
     VALUES
           (-2
           ,0
           ,'N/A'
           ,'No salesperson'
           ,'No salesperson'
           ,'N/A'
           ,'N/A'
           ,''
           ,NULL
           ,'N/A'
           ,'N/A'
           ,'N'
           ,'N'
           ,'N'
           ,'No salesperson'
           ,0
           ,'None'
           ,'None'
           ,0
           ,'None'
           ,'None'
           ,'None'
           ,0
           ,'None'
           ,'None'
           ,'None'
           ,NULL
           ,'None'
           ,'None'
           ,'None'
           ,'Y'
           ,'1/1/1995'
           ,'12/31/9999'
           ,'New'
           ,0
           ,0)
GO

SET IDENTITY_INSERT DimEmployee OFF
go


CREATE NONCLUSTERED INDEX [BK_dbo.DimCustomer] ON [dbo].[DimCustomer] 
(
	[CustomerID] ASC
) ON [PRIMARY]
GO


/*
Create stored proc for handling lookup failures on the Currency dimension, when
we're in the surrogate key pipeline for the fact table.

First, check to see if the key exists already. If not, add a dummy row.
*/
IF EXISTS (SELECT [name] FROM sysobjects WHERE [type]='P' AND [name]='AddCurrencyFailedFactLookup') 
DROP PROCEDURE AddCurrencyFailedFactLookup
go

CREATE PROCEDURE [dbo].[AddCurrencyFailedFactLookup] 
 -- Add the parameters for the stored procedure here
 @BKCurrencyCode nchar(3) , 
 @AuditKey int
AS
BEGIN
 SET NOCOUNT ON;

 IF NOT EXISTS (
  SELECT BKCurrencyCode FROM DimCurrency WHERE BKCurrencyCode=@BKCurrencyCode )
 INSERT INTO DimCurrency (BKCurrencyCode, Currency, IsCurrencyInUse, InsertAuditKey, UpdateAuditKey) 
 VALUES (@BKCurrencyCode, 'Unknown-' + @BKCurrencyCode, 'Y', @AuditKey, @AuditKey)

END
GO


/*
----------------------------------------------------------------------------------
Create or replace a few user views
----------------------------------------------------------------------------------
*/
IF EXISTS (select * from sys.views where object_id=OBJECT_ID(N'[MDWT].[Currency]'))
DROP VIEW [MDWT].[Currency]
GO
CREATE VIEW [MDWT].[Currency] AS 
SELECT [CurrencyKey] AS [CurrencyKey]
, [BKCurrencyCode] AS [CurrencyCode]
, [Currency] AS [Currency]
--, [IsCurrencyInUse] AS [IsCurrencyInUse]
FROM dbo.DimCurrency
WHERE [IsCurrencyInUse] = 'Y'	-- filter out currencies not in use
GO

-- Create a view for Order Date, with column names having "order" in them.
IF EXISTS (select * from sys.views where object_id=OBJECT_ID(N'[MDWT].[OrderDate]'))
DROP VIEW [MDWT].[OrderDate]
go
CREATE View [MDWT].[OrderDate] AS
SELECT [DateKey] AS OrderDateKey
      ,[FullDate] AS OrderFullDate
      ,[DateName] AS OrderDateName
      ,[DayOfWeek] AS OrderDayOfWeek
      ,[DayNameOfWeek] AS OrderDayNameOfWeek
      ,[DayOfMonth] AS OrderDayOfMonth
      ,[DayOfYear] AS OrderDayOfYear
      ,[WeekdayWeekend] AS OrderWeekdayWeekend
      ,[WeekOfYear] AS OrderWeekOfYear
      ,[MonthName] AS OrderMonthName
      ,[MonthOfYear] AS OrderMonthOfYear
      ,[IsLastDayOfMonth] AS OrderIsLastDayOfMonth
      ,[CalendarQuarter] AS OrderQtrOfYear
      ,[CalendarYear] AS OrderYear
      ,[CalendarYearMonth] AS OrderYearMonth
      ,[CalendarYearQtr] AS OrderYearQtr
      ,[FiscalMonthOfYear] AS OrderFiscalMonthOfYear
      ,[FiscalQuarter] AS OrderFiscalQtrOfYear
      ,[FiscalYear] AS OrderFiscalYear
      ,[FiscalYearMonth] AS OrderFiscalYearMonth
      ,[FiscalYearQtr] AS OrderFiscalYearQtr
  FROM [DimDate]
GO

-- Similarly, create a view for due date, with unique column names
IF EXISTS (select * from sys.views where object_id=OBJECT_ID(N'[MDWT].[DueDate]') )
DROP VIEW [MDWT].[DueDate]
go
CREATE View [MDWT].[DueDate] AS
SELECT [DateKey] AS DueDateKey
      ,[FullDate] AS DueFullDate
      ,[DateName] AS DueDateName
      ,[DayOfWeek] AS DueDayOfWeek
      ,[DayNameOfWeek] AS DueDayNameOfWeek
      ,[DayOfMonth] AS DueDayOfMonth
      ,[DayOfYear] AS DueDayOfYear
      ,[WeekdayWeekend] AS DueWeekdayWeekend
      ,[WeekOfYear] AS DueWeekOfYear
      ,[MonthName] AS DueMonthName
      ,[MonthOfYear] AS DueMonthOfYear
      ,[IsLastDayOfMonth] AS DueIsLastDayOfMonth
      ,[CalendarQuarter] AS DueQtrOfYear
      ,[CalendarYear] AS DueYear
      ,[CalendarYearMonth] AS DueYearMonth
      ,[CalendarYearQtr] AS DueYearQtr
      ,[FiscalMonthOfYear] AS DueFiscalMonthOfYear
      ,[FiscalQuarter] AS DueFiscalQtrOfYear
      ,[FiscalYear] AS DueFiscalYear
      ,[FiscalYearMonth] AS DueFiscalYearMonth
      ,[FiscalYearQtr] AS DueFiscalYearQtr
  FROM [DimDate]
GO

IF EXISTS (select * from sys.views where object_id=OBJECT_ID(N'[MDWT].[Salesperson]') )
DROP VIEW [MDWT].[Salesperson]
go
CREATE VIEW [MDWT].[Salesperson] AS
SELECT [EmployeeKey]
      ,[BKEmployeeID]
      ,[NationalIDNumber]
      ,[EmployeeIDName]
      ,[EmployeeFullName]
      ,[EmployeeFirstName]
      ,[EmployeeLastName]
      ,[EmployeeMiddleName]
      ,[BirthDate]
      ,[MaritalStatus]
      ,[Gender]
      ,[IsSalaried]
      ,[IsCurrentEmployee]
      ,[IsSalesPerson]
      ,[JobTitle]
      ,[DepartmentID]
      ,[Department]
      ,[DepartmentGroup]
      ,[BKCurrentSalesTerritoryId]
      ,[CurrentSalesTerritory]
      ,[CurrentSalesTerritoryCountry]
      ,[CurrentSalesTerritoryGroup]
      ,[BKHistoricalSalesTerritoryId]
      ,[HistoricalSalesTerritory]
      ,[HistoricalSalesTerritoryCountry]
      ,[HistoricalSalesTerritoryGroup]
      ,[HireDate]
      ,[EmploymentEndDate]
      ,[LoginID]
      ,[EmployeeEmail]
      ,[EmployeePhone]
      ,[RowIsCurrent]
      ,[RowStartDate]
      ,[RowEndDate]
      ,[RowChangeReason]
  FROM [MDWT_2008R2].[dbo].[DimEmployee]
  --WHERE IsSalesPerson = 'y'
GO

